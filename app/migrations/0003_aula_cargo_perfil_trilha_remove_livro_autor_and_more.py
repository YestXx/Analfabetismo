# Generated by Django 5.2 on 2025-07-23 03:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0002_rename_data_pub_livro_data_plub'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aula',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100, verbose_name='Título da aula')),
                ('conteudo', models.TextField(verbose_name='Conteúdo da aula')),
                ('midia', models.FileField(blank=True, null=True, upload_to='aulas/', verbose_name='Mídia da aula')),
                ('tipo_atividade', models.CharField(max_length=50, verbose_name='Tipo de atividade')),
            ],
            options={
                'verbose_name': 'Aula',
                'verbose_name_plural': 'Aulas',
            },
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_cargo', models.CharField(max_length=50, verbose_name='Nome do cargo')),
                ('descricao_cargo', models.TextField(verbose_name='Descrição do cargo')),
            ],
            options={
                'verbose_name': 'Cargo',
                'verbose_name_plural': 'Cargos',
            },
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao_perfil', models.CharField(max_length=50, verbose_name='Descrição do perfil')),
            ],
            options={
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfis',
            },
        ),
        migrations.CreateModel(
            name='Trilha',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome da trilha')),
                ('nivel', models.CharField(max_length=50, verbose_name='Nível da trilha')),
                ('descricao', models.TextField(verbose_name='Descrição da trilha')),
            ],
            options={
                'verbose_name': 'Trilha',
                'verbose_name_plural': 'Trilhas',
            },
        ),
        migrations.RemoveField(
            model_name='livro',
            name='autor',
        ),
        migrations.RemoveField(
            model_name='editora',
            name='cidade',
        ),
        migrations.RemoveField(
            model_name='livro',
            name='editora',
        ),
        migrations.RemoveField(
            model_name='emprestimo',
            name='leitor',
        ),
        migrations.RemoveField(
            model_name='emprestimo',
            name='livro',
        ),
        migrations.RemoveField(
            model_name='livro',
            name='genero',
        ),
        migrations.CreateModel(
            name='Exercicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.TextField(verbose_name='Texto do exercício')),
                ('audio', models.FileField(blank=True, null=True, upload_to='exercicios/audio/', verbose_name='Áudio do exercício')),
                ('tipo_exercicio', models.CharField(max_length=50, verbose_name='Tipo de exercício')),
                ('nivel', models.CharField(max_length=50, verbose_name='Nível do exercício')),
                ('aula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.aula', verbose_name='Aula')),
            ],
            options={
                'verbose_name': 'Exercício',
                'verbose_name_plural': 'Exercícios',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('idade', models.PositiveIntegerField(blank=True, null=True, verbose_name='Idade')),
                ('cidade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('escolaridade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Escolaridade')),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='perfil/', verbose_name='Foto de Perfil')),
                ('groups', models.ManyToManyField(blank=True, related_name='usuarios_custom', related_query_name='usuario_custom', to='auth.group', verbose_name='grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='usuarios_custom_perms', related_query_name='usuario_custom_perms', to='auth.permission', verbose_name='permissões do usuário')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Resultado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acerto', models.BooleanField(verbose_name='Acertou?')),
                ('tempo_resposta', models.IntegerField(verbose_name='Tempo de resposta (segundos)')),
                ('data', models.DateTimeField(auto_now_add=True, verbose_name='Data do resultado')),
                ('exercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.exercicio', verbose_name='Exercício')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.usuario', verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Resultado',
                'verbose_name_plural': 'Resultados',
            },
        ),
        migrations.CreateModel(
            name='Progresso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel_atual', models.CharField(max_length=50, verbose_name='Nível atual')),
                ('percentual_conclusao', models.FloatField(verbose_name='Percentual de conclusão')),
                ('data_ultima_atividade', models.DateTimeField(auto_now=True, verbose_name='Última atividade')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.usuario', verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Progresso',
                'verbose_name_plural': 'Progressos',
            },
        ),
        migrations.CreateModel(
            name='Notificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=50, verbose_name='Tipo de notificação')),
                ('mensagem', models.TextField(verbose_name='Mensagem da notificação')),
                ('data_hora', models.DateTimeField(auto_now_add=True, verbose_name='Data/Hora')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.usuario', verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Notificação',
                'verbose_name_plural': 'Notificações',
            },
        ),
        migrations.CreateModel(
            name='Mensagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensagem', models.TextField(verbose_name='Mensagem')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Data/Hora')),
                ('destinatario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensagens_recebidas', to='app.usuario', verbose_name='Destinatário')),
                ('remetente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensagens_enviadas', to='app.usuario', verbose_name='Remetente')),
            ],
            options={
                'verbose_name': 'Mensagem',
                'verbose_name_plural': 'Mensagens',
            },
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel_inicial', models.CharField(max_length=50, verbose_name='Nível inicial')),
                ('data', models.DateField(auto_now_add=True, verbose_name='Data da avaliação')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.usuario', verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Avaliação',
                'verbose_name_plural': 'Avaliações',
            },
        ),
        migrations.DeleteModel(
            name='Autor',
        ),
        migrations.DeleteModel(
            name='Cidade',
        ),
        migrations.DeleteModel(
            name='Editora',
        ),
        migrations.DeleteModel(
            name='Leitor',
        ),
        migrations.DeleteModel(
            name='Emprestimo',
        ),
        migrations.DeleteModel(
            name='Genero',
        ),
        migrations.DeleteModel(
            name='Livro',
        ),
    ]
